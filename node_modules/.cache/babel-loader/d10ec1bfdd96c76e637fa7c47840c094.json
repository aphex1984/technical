{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aphex\\\\Documents\\\\Atom_Projects\\\\webApp\\\\highscore\\\\src\\\\component\\\\JsonProcessor.js\";\nimport React from 'react';\nimport data from './data/scores.json'; // Constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minimumSubs = 3;\nconst maximumSubs = 24;\n\nfunction JsonProcessor() {\n  var results = [];\n  var names = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var name = data[i];\n\n    if (name.submissions.length > minimumSubs) {\n      // We've got to rule out submissions less than 3.\n      //console.log(name.name + \" \" + name.submissions.length); //debug\n      var array = name.submissions;\n      var scoreTotal = [];\n\n      for (var j = 0; j < array.length; j++) {\n        var scores = array[j];\n        scoreTotal.push(scores.score);\n      }\n\n      results.push(accumulateScores(scoreTotal));\n      names.push(name.name);\n    }\n  }\n\n  console.log(results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = JsonProcessor;\n\nfunction accumulateScores(input) {\n  var sum = 0;\n  var test = 0;\n  input.sort(function (a, b) {\n    // Sorting arrays\n    return b - a;\n  });\n\n  for (var k = 0; k < input.length; k++) {\n    //Adding them all up\n    if (k <= maximumSubs - 1) {\n      sum += input[k];\n      test++;\n    }\n  }\n\n  return sum;\n}\n\nexport default JsonProcessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"JsonProcessor\");","map":{"version":3,"sources":["C:/Users/aphex/Documents/Atom_Projects/webApp/highscore/src/component/JsonProcessor.js"],"names":["React","data","minimumSubs","maximumSubs","JsonProcessor","results","names","i","length","name","submissions","array","scoreTotal","j","scores","push","score","accumulateScores","console","log","input","sum","test","sort","a","b","k"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;;AACA,MAAMC,WAAW,GAAG,CAApB;AACA,MAAMC,WAAW,GAAG,EAApB;;AAEA,SAASC,aAAT,GAAyB;AACrB,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,IAAI,CAACO,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClC,QAAIE,IAAI,GAAGR,IAAI,CAACM,CAAD,CAAf;;AACA,QAAGE,IAAI,CAACC,WAAL,CAAiBF,MAAjB,GAA0BN,WAA7B,EAA0C;AAAE;AACxC;AACA,UAAIS,KAAK,GAAGF,IAAI,CAACC,WAAjB;AACA,UAAIE,UAAU,GAAG,EAAjB;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAK,CAACH,MAAzB,EAAiCK,CAAC,EAAlC,EAAqC;AACnC,YAAIC,MAAM,GAAGH,KAAK,CAACE,CAAD,CAAlB;AACAD,QAAAA,UAAU,CAACG,IAAX,CAAgBD,MAAM,CAACE,KAAvB;AACH;;AACDX,MAAAA,OAAO,CAACU,IAAR,CAAaE,gBAAgB,CAACL,UAAD,CAA7B;AACAN,MAAAA,KAAK,CAACS,IAAN,CAAWN,IAAI,CAACA,IAAhB;AACD;AACF;;AAEOS,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AAEV,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAzBQD,a;;AA2BT,SAASa,gBAAT,CAA0BG,KAA1B,EAAgC;AAC9B,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAG,CAAX;AAEAF,EAAAA,KAAK,CAACG,IAAN,CAAW,UAASC,CAAT,EAAWC,CAAX,EAAc;AAAE;AACzB,WAAOA,CAAC,GAAGD,CAAX;AACD,GAFD;;AAIA,OAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,KAAK,CAACZ,MAAzB,EAAiCkB,CAAC,EAAlC,EAAqC;AAAE;AACrC,QAAGA,CAAC,IAAIvB,WAAW,GAAG,CAAtB,EAAwB;AACpBkB,MAAAA,GAAG,IAAID,KAAK,CAACM,CAAD,CAAZ;AACAJ,MAAAA,IAAI;AACL;AACF;;AACD,SAAOD,GAAP;AACD;;AAGH,eAAejB,aAAf","sourcesContent":["import React from 'react';\r\nimport data from './data/scores.json'\r\n\r\n// Constants\r\nconst minimumSubs = 3;\r\nconst maximumSubs = 24;\r\n\r\nfunction JsonProcessor() {\r\n    var results = [];\r\n    var names = [];\r\n\r\n    for(var i = 0; i < data.length; i++){\r\n      var name = data[i];\r\n      if(name.submissions.length > minimumSubs) { // We've got to rule out submissions less than 3.\r\n          //console.log(name.name + \" \" + name.submissions.length); //debug\r\n          var array = name.submissions;\r\n          var scoreTotal = [];\r\n\r\n          for(var j = 0; j < array.length; j++){\r\n            var scores = array[j];\r\n            scoreTotal.push(scores.score);\r\n        }\r\n        results.push(accumulateScores(scoreTotal));\r\n        names.push(name.name);\r\n      }\r\n    }\r\n\r\n            console.log(results);\r\n\r\n  return (\r\n    <div>...</div>\r\n  );\r\n}\r\n\r\nfunction accumulateScores(input){\r\n  var sum = 0;\r\n  var test = 0;\r\n\r\n  input.sort(function(a,b) { // Sorting arrays\r\n    return b - a;\r\n  });\r\n\r\n  for(var k = 0; k < input.length; k++){ //Adding them all up\r\n    if(k <= maximumSubs - 1){\r\n        sum += input[k];\r\n        test ++;\r\n      }\r\n    }\r\n    return(sum);\r\n  }\r\n\r\n\r\nexport default JsonProcessor;\r\n"]},"metadata":{},"sourceType":"module"}