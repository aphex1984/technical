{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aphex\\\\Documents\\\\Atom_Projects\\\\webApp\\\\highscore\\\\src\\\\component\\\\JsonProcessor.js\";\nimport React from 'react';\nimport data from './data/scores.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minimumSubs = 3;\nconst maximumSubs = 24;\n\nfunction JsonProcessor() {\n  for (var i = 0; i < data.length; i++) {\n    var name = data[i];\n\n    if (name.submissions.length > minimumSubs) {\n      // We've got to rule out submissions less than 3.\n      console.log(name.name + \" \" + name.submissions.length);\n      var array = name.submissions;\n      var scoreTotal = [];\n\n      for (var j = 0; j < array.length; j++) {\n        var scores = array[j];\n        scoreTotal.push(scores.score);\n      }\n\n      accumulateScores(scoreTotal);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = JsonProcessor;\n\nfunction accumulateScores(input) {\n  for (var k = 0; k < input.length; k++) {\n    input.sort(function (a, b) {\n      // Sorting arrays\n      return b - a;\n    });\n    var sum = 0;\n\n    for (var m = 0; m < input[k].length || m <= maximumSubs; m++) {\n      sum += input[m];\n    }\n\n    console.log(sum);\n  }\n}\n\nexport default JsonProcessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"JsonProcessor\");","map":{"version":3,"sources":["C:/Users/aphex/Documents/Atom_Projects/webApp/highscore/src/component/JsonProcessor.js"],"names":["React","data","minimumSubs","maximumSubs","JsonProcessor","i","length","name","submissions","console","log","array","scoreTotal","j","scores","push","score","accumulateScores","input","k","sort","a","b","sum","m"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,WAAW,GAAG,CAApB;AACA,MAAMC,WAAW,GAAG,EAApB;;AAEA,SAASC,aAAT,GAAyB;AACrB,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,IAAI,CAACK,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClC,QAAIE,IAAI,GAAGN,IAAI,CAACI,CAAD,CAAf;;AACA,QAAGE,IAAI,CAACC,WAAL,CAAiBF,MAAjB,GAA0BJ,WAA7B,EAA0C;AAAE;AACxCO,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAL,GAAY,GAAZ,GAAkBA,IAAI,CAACC,WAAL,CAAiBF,MAA/C;AACA,UAAIK,KAAK,GAAGJ,IAAI,CAACC,WAAjB;AACA,UAAII,UAAU,GAAG,EAAjB;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAK,CAACL,MAAzB,EAAiCO,CAAC,EAAlC,EAAqC;AACnC,YAAIC,MAAM,GAAGH,KAAK,CAACE,CAAD,CAAlB;AACAD,QAAAA,UAAU,CAACG,IAAX,CAAgBD,MAAM,CAACE,KAAvB;AACH;;AACDC,MAAAA,gBAAgB,CAACL,UAAD,CAAhB;AACD;AACF;;AACH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAlBQR,a;;AAoBT,SAASa,gBAAT,CAA0BC,KAA1B,EAAgC;AAC9B,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAK,CAACZ,MAAzB,EAAiCa,CAAC,EAAlC,EAAqC;AACnCD,IAAAA,KAAK,CAACE,IAAN,CAAW,UAASC,CAAT,EAAWC,CAAX,EAAc;AAAE;AACzB,aAAOA,CAAC,GAAGD,CAAX;AACD,KAFD;AAGA,QAAIE,GAAG,GAAG,CAAV;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGN,KAAK,CAACC,CAAD,CAAL,CAASb,MAAb,IAAuBkB,CAAC,IAAIrB,WAA5C,EAA0DqB,CAAC,EAA3D,EAA8D;AAC5DD,MAAAA,GAAG,IAAIL,KAAK,CAACM,CAAD,CAAZ;AACD;;AACDf,IAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD;AACF;;AAGD,eAAenB,aAAf","sourcesContent":["import React from 'react';\r\nimport data from './data/scores.json'\r\n\r\nconst minimumSubs = 3;\r\nconst maximumSubs = 24;\r\n\r\nfunction JsonProcessor() {\r\n    for(var i = 0; i < data.length; i++){\r\n      var name = data[i];\r\n      if(name.submissions.length > minimumSubs) { // We've got to rule out submissions less than 3.\r\n          console.log(name.name + \" \" + name.submissions.length);\r\n          var array = name.submissions;\r\n          var scoreTotal = [];\r\n\r\n          for(var j = 0; j < array.length; j++){\r\n            var scores = array[j];\r\n            scoreTotal.push(scores.score);\r\n        }\r\n        accumulateScores(scoreTotal);\r\n      }\r\n    }\r\n  return (\r\n    <div>...</div>\r\n  );\r\n}\r\n\r\nfunction accumulateScores(input){\r\n  for(var k = 0; k < input.length; k++){\r\n    input.sort(function(a,b) { // Sorting arrays\r\n      return b - a;\r\n    });\r\n    var sum = 0;\r\n    for(var m = 0; (m < input[k].length || m <= maximumSubs); m++){\r\n      sum += input[m];\r\n    }\r\n    console.log(sum);\r\n  }\r\n}\r\n\r\n\r\nexport default JsonProcessor;\r\n"]},"metadata":{},"sourceType":"module"}